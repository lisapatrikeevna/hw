{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h10/hw10.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h12/HW12.module.css","p2-homeworks/h5/pages/Error404.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h11/common/c7-SuperRange/SuperRange.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","Redux/loadingReducer.ts","p2-homeworks/h10/HW10.tsx","p2-homeworks/h11/common/c7-SuperRange/SuperRange.tsx","p2-homeworks/h11/common/c8-SuperDoubleRange/SuperDoubleRange.tsx","p2-homeworks/h11/HW11.tsx","Redux/colorReduser.ts","p2-homeworks/h12/HW12.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h13/Request.tsx","Redux/Api.ts","Redux/requestReduser.ts","p2-homeworks/h13/HW13.tsx","p2-homeworks/h5/pages/PreJuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","Redux/store.ts","index.tsx"],"names":["module","exports","Header","Nav","title","props","useState","collaps","setCollaps","className","cl","nav","NavTile","titleValue","onClick","NavBody","to","Message","messages","itemUser","src","avatar","ava","textUser","nameUser","name","message","time","messageData","HW1","wrap","Affair","affair","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","HW2","priority","affairs","setAffairs","filter","filteredAffairs","el","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","someClass","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","trim","alert","HW3","setUsers","newName","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","default","superInput","SuperButton","red","finalClassName","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","window","addEventListener","console","log","HW6","setValue","undefined","result","SuperSelect","options","onChangeOption","mappedOptions","o","index","SuperRadio","onChangeCallback","i","arr","HW7","homeWorkReducer","initialPeople","action","payload","sort","b","age","HW8","people","setPeople","finalPeople","p","Clock","timerId","setTimerId","date","setDate","show","setShow","stop","clearInterval","stringTime","toTimeString","stringDate","toDateString","onMouseEnter","onMouseLeave","id","setInterval","newDate","Date","HW9","initialState","loading","loadProcessAC","load","loadingReducer","HW10","useSelector","hw10","dispatch","useDispatch","pagePreloader","cssloadContainer","cssloadL","cssloadCircle","cssloadTriangle","cssloadSquare","cssloadI","cssloadN","cssloadG","setTimeout","SuperRange","onChangeRange","finalRangeClassName","range","SuperDoubleRange","max","min","HW11","value1","setValue1","value2","setValue2","values","theme","colorReduser","themes","HW12","hw12","changeThemeAC","PreJunior","Error404","errorPage","num","Request","answer","instanse","axios","create","baseURL","hwApi","success","post","answerRequestAC","requestReduser","HW13","dicpatch","hw13","useCallback","succes","then","response","errorText","info","catch","err","PreJuniorPlus","path","PATH","render","PRE_JUNIOR","PRE_JUNIOR_PLUS","PRE_PREJUNIOR","Routes","exact","HW5","App","Boolean","location","hostname","match","reducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0HACAA,EAAOC,QAAU,CAAC,KAAO,sBAAsB,SAAW,0BAA0B,IAAM,qBAAqB,SAAW,0BAA0B,SAAW,0BAA0B,KAAO,wB,mBCAhMD,EAAOC,QAAU,CAAC,cAAgB,4BAA4B,SAAW,uBAAuB,iBAAmB,+BAA+B,SAAW,uBAAuB,SAAW,uBAAuB,SAAW,uBAAuB,SAAW,uBAAuB,cAAgB,4BAA4B,cAAgB,4BAA4B,gBAAkB,8BAA8B,kBAAoB,kC,mBCAtbD,EAAOC,QAAU,CAAC,WAAa,mCAAmC,QAAU,gCAAgC,WAAa,mCAAmC,MAAQ,gC,mBCApKD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,MAAQ,0B,mBCAlED,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,mBCA/DD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,mBCA7ED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAY,wBAAwB,IAAM,kBAAkB,WAAW,uBAAuB,KAAO,mBAAmB,YAAY,0B,mBCAhLD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,IAAM,wB,mBCAhED,EAAOC,QAAU,CAAC,IAAM,mB,mBCAxBD,EAAOC,QAAU,CAAC,IAAM,sB,mBCAxBD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,sB,mBCApDD,EAAOC,QAAU,CAAC,MAAQ,4B,uOCaXC,MARf,WACI,OACI,6BACI,kBAACC,EAAD,CAAKC,MAAO,WAUxB,SAASD,EAAIE,GAAiB,IAAD,EACGC,oBAAkB,GADrB,mBACpBC,EADoB,KACXC,EADW,KAEzB,OACI,yBAAKC,UAAWC,IAAGC,KACf,kBAACC,EAAD,CAASC,WAAYR,EAAMD,MAAOU,QAAS,WACvCN,GAAYD,OAEdA,GAAW,kBAACQ,EAAD,OAWzB,SAASH,EAAQP,GACb,OACI,wBAAIS,QAAST,EAAMS,SAAUT,EAAMQ,YAI3C,SAASE,IACL,OACI,4BACI,4BAAI,kBAAC,IAAD,CAASC,GAAG,QAAZ,QACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,QAAZ,QACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,QAAZ,QACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,QAAZ,QACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,QAAZ,QACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,QAAZ,QACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,QAAZ,QACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,QAAZ,QACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,SAAZ,SACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,SAAZ,SACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,SAAZ,SACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,eAAZ,oBACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,kBAAZ,gB,4BC9BDC,MAlBf,SAAiBZ,GACb,OACI,yBAAKI,UAAWC,IAAGQ,UACf,yBAAKT,UAAWC,IAAGS,UACf,yBAAKC,IAAKf,EAAMgB,OAAQZ,UAAWC,IAAGY,MACtC,yBAAKb,UAAWC,IAAGa,UACf,6BACI,wBAAId,UAAWC,IAAGc,UAAWnB,EAAMoB,MACnC,uBAAGhB,UAAWC,IAAGgB,SAAUrB,EAAMqB,UAErC,0BAAMjB,UAAWC,IAAGiB,MAAOtB,EAAMsB,UCP/CC,EACM,qFADNA,EAEI,YAFJA,EAGO,YAHPA,EAII,QAkBKC,MAff,WACI,OACI,yBAAKpB,UAAWC,IAAGoB,MACf,6BAEA,kBAAC,EAAD,CAAST,OAAQO,EAAoBH,KAAMG,EAAkBF,QAASE,EAAqBD,KAAMC,IAEjG,6BAGA,+BCTGG,MAZf,SAAgB1B,GAGZ,OACI,6BAEI,8BAAOA,EAAM2B,OAAOP,MACpB,4BAAQX,QANO,WAAOT,EAAM4B,qBAAqB5B,EAAM2B,OAAOE,OAM9D,OCqBGC,MA3Bf,SAAiB9B,GACb,IAAM+B,EAAgB/B,EAAMgC,KAAKC,KAAI,SAACC,GAAD,OACjC,kBAAC,EAAD,CACIC,IAAKD,EAAEL,IACPF,OAAQO,EACRN,qBAAsB5B,EAAM4B,0BASpC,OACI,6BAEKG,EAED,4BAAQtB,QAVD,WAAOT,EAAMoC,UAAW,SAU/B,OACA,4BAAQ3B,QAVA,WAAOT,EAAMoC,UAAW,UAUhC,QACA,4BAAQ3B,QAVE,WAAOT,EAAMoC,UAAU,YAUjC,UACA,4BAAQ3B,QAVD,WAAOT,EAAMoC,UAAU,SAU9B,SCoBGC,MA9Bf,WAAgB,IAAD,EACmBpC,mBAA4B,CACtD,CAAC4B,IAAK,EAAGT,KAAM,QAASkB,SAAU,QAClC,CAACT,IAAK,EAAGT,KAAM,QAASkB,SAAU,OAClC,CAACT,IAAK,EAAGT,KAAM,QAASkB,SAAU,OAClC,CAACT,IAAK,EAAGT,KAAM,OAAQkB,SAAU,QACjC,CAACT,IAAK,EAAGT,KAAM,aAAckB,SAAU,YANhC,mBACJC,EADI,KACKC,EADL,OAQiBvC,mBAAqB,OARtC,mBAQJwC,EARI,KAQIL,EARJ,KAULM,EArBmB,SAACH,EAA4BE,GACtD,MAAe,QAAXA,EAAyBF,EACf,QAAXE,EAAyBF,EAAQE,QAAO,SAAAE,GAAE,MAAoB,QAAhBA,EAAGL,YACtC,SAAXG,EAA0BF,EAAQE,QAAO,SAAAE,GAAE,MAAmB,SAAfA,EAAGL,YACvC,WAAXG,EAA4BF,EAAQE,QAAO,SAAAE,GAAE,MAAmB,WAAfA,EAAGL,YAC/CC,EAgBgBK,CAAcL,EAASE,GAE/C,OACI,6BACI,6BAEA,kBAAC,EAAD,CACIT,KAAMU,EACNN,UAAWA,EACXR,qBARiB,SAACC,GAAD,OAAiBW,EAftB,SAACD,EAA4BV,GACrD,OAAOU,EAAQE,QAAO,SAAAE,GAAE,OAAEA,EAAGd,KAAOA,KAcqBgB,CAAaN,EAASV,OAWvE,6BAGA,+B,yBCpBGiB,EAhB+B,SAAC,GAA4D,IAAzD1B,EAAwD,EAAxDA,KAAM2B,EAAkD,EAAlDA,gBAAiBC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAE/EC,EAAaF,EAAOG,IAAEH,MAAQG,IAAEC,UAEtC,OACI,6BACI,8BAAOJ,GACP,6BACA,2BAAOK,MAAOlC,EAAMmC,SAAUR,EAAiB3C,UAAW+C,IAC1D,4BAAQ1C,QAASuC,GAAjB,QAEA,8CAAoBE,KCqBjBM,EAhCiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBAAqB,EAClEzD,mBAAiB,IADiD,mBACnFmB,EADmF,KAC7EuC,EAD6E,OAEhE1D,mBAAsB,MAF0C,mBAEnFgD,EAFmF,KAE5EW,EAF4E,KAoBpFV,EAAoBO,EAAMI,OAChC,OACI,kBAAC,EAAD,CACIzC,KAAMA,EACN2B,gBApBgB,SAACe,GACJA,EAAEC,cAAcT,MAE9BL,GAAOW,EAAS,IACnBD,EAAQG,EAAEC,cAAcT,QAiBpBN,QAfQ,WACT5B,EAAK4C,QACJC,MAAM,SAAD,OAAU7C,EAAV,OACLsC,EAAgBtC,GAChBuC,EAAQ,KAERC,EAAS,8BAUTX,MAAOA,EACPC,WAAYA,K,QCPTgB,MArBf,WAAgB,IAAD,EACejE,mBAA0B,IADzC,mBACJwD,EADI,KACGU,EADH,KAQX,OACI,6BACI,6BACA,kBAAC,EAAD,CAAmBV,MAAOA,EAAOC,gBARjB,SAACtC,GACrB,IAAIgD,EAAmB,CAAChD,KAAMA,EAAOS,IAAKwC,eAC1CF,EAAS,CAACC,GAAF,mBAAcX,QAQlB,6BAGA,+B,wBC2BGa,EAvC2C,SAAC,GAMtD,EAJGC,KAIF,IAJQhB,EAIT,EAJSA,SAAUiB,EAInB,EAJmBA,aAAcC,EAIjC,EAJiCA,WAAYC,EAI7C,EAJ6CA,QAASzB,EAItD,EAJsDA,MAAkB0B,GAIxE,EAJ6DvE,UAI7D,EAJwEuE,eAAcf,EAItF,EAJsFA,SAEhFgB,EAEN,wHAcKC,EAAkB,UAAMzB,IAAEH,MAAR,YAAiB0B,GAAgC,IAGnEG,EAAuB7B,EAAsCG,IAAE2B,WAAW,IAAI3B,IAAE4B,QAAlD5B,IAAE6B,WAAY,IAAK7B,IAAE4B,QACzD,OACI,oCACI,yCACIT,KAAM,OACNhB,SArBa,SAACO,GACtBF,EAAS,IACTL,GAAYA,EAASO,GACrBU,GAAgBA,EAAaV,EAAEC,cAAcT,QAmBrCmB,WAjBe,SAACX,GACxBW,GAAcA,EAAWX,GAEf,UAAVA,EAAE3B,KACCuC,GACAA,KAaKtE,UAAW0E,GAEPF,IAEP3B,GAAS,0BAAM7C,UAAWyE,GAAqB5B,K,kCCtB7CiC,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAK/E,EAGR,EAHQA,UACFwE,EAEN,mCACKQ,EAAc,UAAMD,EAAM/B,IAAE+B,IAAM/B,IAAE4B,QAAtB,YAAiC5E,GAErD,OACI,0CACIA,UAAWgF,GACPR,K,iBCiBDS,EA5ByC,SAAC,GAMpD,EALCd,KAKA,IALMhB,EAKP,EALOA,SAAU+B,EAKjB,EALiBA,gBAAiBlF,EAKlC,EALkCA,UAC/BmF,GAIH,EAL6CZ,cAK7C,EAJGY,UAEGX,EAEN,4FAMKE,EAAmB,UAAM1B,IAAEoC,SAAR,YAAoBpF,GAAwB,IAErE,OACI,+BACI,yCACImE,KAAM,WACNhB,SAXa,SAACO,GACtBP,GAAYA,EAASO,GACrBwB,GAAmBA,EAAgBxB,EAAEC,cAAc0B,UAU3CrF,UAAW0E,GAEPF,IAEPW,GAAY,0BAAMnF,UAAWgD,IAAEuB,eAAgBY,KCkC7CG,MA7Df,WAAgB,IAAD,EACazF,mBAAiB,IAD9B,mBACJ0F,EADI,KACEC,EADF,OAEW3F,mBAAiB,IAF5B,mBAELgD,EAFK,KAECW,EAFD,KAGLiC,EAAY,WACPjC,EAAP+B,EAAgB,GAAe,SAC3B1C,EACAgB,MAAM,iFAGNA,MAAM0B,GACNC,EAAQ,MAVL,EAemB3F,oBAAkB,GAfrC,mBAeJwF,EAfI,KAeKK,EAfL,KAiBPX,GAAM,EAEV,OADGlC,IAAOkC,GAAM,GAEZ,6BACI,6BADJ,cAII,yBAAK/E,UAAWgD,IAAE2C,QACd,kBAAC,EAAD,CACIzC,MAAOqC,EACPnB,aAAcoB,EACdlB,QAASmB,EACT5C,MAAOA,EACPW,SAAUA,IAKd,kBAAC,EAAD,CACIuB,IAAOA,EACP1E,QAASoF,GAFb,WAQA,kBAAC,EAAD,CACIJ,QAASA,EACTH,gBAAiBQ,GAFrB,cAKA,kBAAC,EAAD,CAAeL,QAASA,EAASlC,SAhCxB,SAACO,GAAD,OAAsCgC,EAAWhC,EAAEC,cAAc0B,aAmC9E,6BAKA,+BCqBGO,G,MA9D4C,SAAC,GASvD,EAPGC,UAOF,IANEC,EAMH,EANGA,OACAxB,EAKH,EALGA,QACAyB,EAIH,EAJGA,UAEGvB,EAEN,8DAC+B3E,oBAAkB,GADjD,mBACMmG,EADN,KACgBC,EADhB,OAE8DF,GAAa,GAArEZ,EAFN,EAEMA,SAAUe,EAFhB,EAEgBA,cAAelG,EAF/B,EAE+BA,UAAcmG,EAF7C,wDAqBK5B,EAAmB,aAAN,WAAsBvE,GAEzC,OACI,oCACKgG,EAEO,kBAAC,EAAD,eACIH,WAAS,EACTC,OAnBG,SAACpC,GAEpBuC,GAAY,GACZH,GAAUA,EAAOpC,IAiBDY,QA1BI,WAGpBA,GAAWA,IACX2B,GAAY,KAwBQzB,IAGR,8BACI,wCACI0B,cAtBM,SAACxC,GAE3BuC,GAAY,GACZC,GAAiBA,EAAcxC,IAoBX1D,UAAWuE,GAEP4B,GAGHhB,GAAYX,EAAUtB,OAE3B,sDCxEjB,SAASkD,EAAarE,EAAasE,GACtC,IAAMC,EAAgBC,KAAKC,UAAUH,GACrCI,aAAaC,QAAQ3E,EAAKuE,GAIvB,SAASK,EAAgB5E,EAAa6E,GACzC,IAAMN,EAAgBG,aAAaI,QAAQ9E,GAE3C,OADsB,OAAlBuE,IAAwBM,EAAeL,KAAKO,MAAMR,IAC/CM,EAWXR,EAAqB,OAAQ,CAACW,EAAG,IAAKC,EAAG,IAGhBL,EAAwB,OAAQ,CAACI,EAAG,GAAIC,EAAG,IAGpEC,OAAOC,iBAAiB,WAAW,SAAAxD,GAAIyD,QAAQC,IAAI1D,MCapC2D,MArCf,WAAgB,IAAD,EACexH,mBAAiB,IADhC,mBACJqD,EADI,KACGoE,EADH,OAEWzH,mBAAsB,MAFjC,mBAEC2D,GAFD,WAYX,OACI,6BACI,6BADJ,cAKI,6BACI,kBAAC,EAAD,CACIN,MAAOA,EACPkB,aAAckD,EACdvB,UAAW,CAACZ,SAAUjC,OAAQqE,EAAY,iBAC1C/D,SAAUA,KAGlB,kBAAC,EAAD,CAAanD,QAvBR,WACT+F,EAAkB,sBAAuBlD,KAsBrC,QACA,kBAAC,EAAD,CAAa7C,QArBL,WACZ,IAAMmH,EAASb,EAAqB,sBAAsBzD,GAC1DoE,EAASE,GACNtE,EAAMU,QAAQ0D,EAASpE,KAkBtB,WAEA,6BAGA,+BCRGuE,EApBqC,SAAC,GAI/C,IAHDC,EAGA,EAHAA,QACGvE,EAEH,EAFGA,SAAUwE,EAEb,EAFaA,eACPnD,EACN,uDAEMoD,EAAuBF,EAAUA,EAAQ7F,KAAI,SAACgG,EAAEC,GAAH,OAAY,4BAAQ/F,IAAK8F,EAAEC,OAASD,MAAe,GAMvG,OAEI,0CAAQ1E,SANa,SAACO,GACtBP,GAAYA,EAASO,GACrBiE,GAAkBA,EAAejE,EAAEC,cAAcT,SAITsB,GACrCoD,IC0BIG,GAzCmC,SAAC,GAO9C,EALG5D,KAKF,IALQnD,EAKT,EALSA,KACN0G,EAIH,EAJGA,QAASxE,EAIZ,EAJYA,MACTC,EAGH,EAHGA,SAAUwE,EAGb,EAHaA,eAIRK,GADL,6EACwB,SAACtE,GAGtBP,GAAYA,EAASO,GACrBiE,GAAkBA,EAAejE,EAAEC,cAAcT,SAO/C0E,EAAuBF,EAAUA,EAAQ7F,KAAI,SAACgG,EAAGI,GAAJ,OAE/C,2BAAOlG,IAAKf,EAAO,IAAMiH,GACrB,2BACI9D,KAAM,QAENjB,MAAO2E,EACP7G,KAAMA,EACNqE,QAASnC,IAAU2E,EACnB1E,SAAU6E,IAEbH,MAEJ,GAEL,OACI,oCACKD,ICzCPM,GAAM,CAAC,IAAK,IAAK,KAoCRC,OAlCf,WAAgB,IAAD,EACqBtI,mBAASqI,GAAI,IADlC,mBACJhF,EADI,KACGyE,EADH,KAGX,OACI,6BACI,6BADJ,cAKI,6BACI,kBAAC,EAAD,CACID,QAASQ,GACThF,MAAOA,EACPyE,eAAgBA,KAGxB,6BACI,kBAAC,GAAD,CACI3G,KAAM,QACN0G,QAASQ,GACThF,MAAOA,EACPyE,eAAgBA,KAIxB,6BAIA,+BC1BCS,GAAkB,WAA0E,IAAzE/B,EAAwE,uDAA3CgC,GAAeC,EAA4B,uCAChG,OAAQA,EAAOnE,MACX,IAAK,OAuBD,MArBuB,OAAnBmE,EAAOC,QACO,YAAIlC,GAAOmC,MAAK,SAAC1G,EAAG2G,GAC9B,OAAI3G,EAAEd,KAAOyH,EAAEzH,KACJ,EAEPc,EAAEd,KAAOyH,EAAEzH,MACH,EAEL,KAGG,YAAIqF,GAAOmC,MAAK,SAAC1G,EAAG2G,GAC9B,OAAI3G,EAAEd,KAAOyH,EAAEzH,KACJ,EAEPc,EAAEd,KAAOyH,EAAEzH,MACH,EAEL,KAKnB,IAAK,QACD,OAAOqF,EAAMhE,QAAO,SAAC4F,GAAD,OAAKA,EAAES,IAAMJ,EAAOI,OAC5C,QACI,OAAOrC,IC/BVgC,GAAyC,CAClD,CAAC5G,IAAK,EAAGT,KAAM,qBAAO0H,IAAK,GAC3B,CAACjH,IAAK,EAAGT,KAAM,yDAAa0H,IAAK,IACjC,CAACjH,IAAK,EAAGT,KAAM,2BAAQ0H,IAAK,IAC5B,CAACjH,IAAK,EAAGT,KAAM,uCAAU0H,IAAK,IAC9B,CAACjH,IAAK,EAAGT,KAAM,6CAAW0H,IAAK,IAC/B,CAACjH,IAAK,EAAGT,KAAM,iCAAS0H,IAAK,KA0ClBC,OAtCf,WAAgB,IAAD,EACiB9I,mBAASwI,IAD1B,mBACJO,EADI,KACIC,EADJ,KAGLC,EAAcF,EAAO/G,KAAI,SAAAkH,GAAC,OAC5B,yBAAKhH,IAAKgH,EAAEtH,KACPsH,EAAE/H,KACF+H,EAAEL,QASX,OACI,6BACI,6BADJ,cAMKI,EACD,6BAAK,kBAAC,EAAD,CAAazI,QAZX,kBAAMwI,EAAUT,GAAgBC,GDcd,CAAClE,KAAM,OAAQoE,QAAS,UCF5C,YACL,6BAAK,kBAAC,EAAD,CAAalI,QAZT,kBAAMwI,EAAUT,GAAgBC,GDcd,CAAClE,KAAM,OAAQoE,QAAS,YCF9C,cACL,6BAAK,kBAAC,EAAD,CAAalI,QAZV,kBAAMwI,EAAUT,GAAgBC,GDcrB,CAAClE,KAAM,QAASuE,IAAI,QCFlC,aATT,WAcI,6BAGA,+BCEGM,OAlDf,WAAkB,IAAD,EACiBnJ,mBAAiB,GADlC,mBACNoJ,EADM,KACGC,EADH,OAEWrJ,qBAFX,mBAENsJ,EAFM,KAEAC,EAFA,OAGWvJ,oBAAkB,GAH7B,mBAGNwJ,EAHM,KAGAC,EAHA,KAKPC,EAAO,WAETC,cAAcP,IAkBZQ,EAAYN,EAAMA,EAAKO,eAAiB,OACxCC,EAAaR,EAAMA,EAAKS,eAAiB,OAE/C,OACI,6BACI,yBACIC,aAbS,WACjBP,GAAQ,IAaAQ,aAXS,WACjBR,GAAQ,KAYCG,GAGJJ,GACG,6BACKM,GAIT,kBAAC,EAAD,CAAatJ,QAlCP,WACVkJ,IACA,IAAMQ,EAAa9C,OAAO+C,aAAY,WAClC,IAAIC,EAAQ,IAAIC,KAChBd,EAAQa,KACT,KACHf,EAAWa,KA4BP,SACA,kBAAC,EAAD,CAAa1J,QAASkJ,GAAtB,UC3BGY,OAjBf,WACI,OACI,6BACI,6BADJ,cAKI,kBAAC,GAAD,MAEA,6BAGA,+B,kBCVRC,GAAiC,CACjCC,SAAS,GAYAC,GAAgB,SAACC,GAAD,MAAmB,CAACpG,KAAK,UAAUoG,SAEjDC,GAZQ,WAAgE,IAA/DnE,EAA8D,uDAAtD+D,GAAc9B,EAAwC,uCAClF,OAAQA,EAAOnE,MACX,IAAK,UACD,OAAO,6BAAIkC,GAAX,IACIgE,QAAS/B,EAAOiC,OAExB,QACI,OAAOlE,I,oBC6CJoE,OArDf,WAEI,IAAIJ,EAAUK,cAAmC,SAAArE,GAAK,OAAIA,EAAMsE,KAAKN,WACjEO,EAAWC,eAaf,OACI,6BACI,6BADJ,eAKKR,EAIO,yBAAKN,GAAI9J,KAAG6K,eACR,yBAAK9K,UAAWC,KAAG8K,kBACf,yBAAK/K,UAAWC,KAAG+K,UAAnB,KACA,yBAAKhL,UAAWC,KAAGgL,gBACnB,yBAAKjL,UAAWC,KAAGiL,kBACnB,yBAAKlL,UAAWC,KAAGkL,gBACnB,yBAAKnL,UAAWC,KAAGmL,UAAnB,KACA,yBAAKpL,UAAWC,KAAGoL,UAAnB,KACA,yBAAKrL,UAAWC,KAAGqL,UAAnB,OAKR,6BACI,kBAAC,EAAD,CAAajL,QAlCd,WAEfuK,EAASN,IAAc,IACvBiB,YAAW,WACPX,EAASN,IAAc,MACxB,KACHnD,QAAQC,IAAI,gBA4BI,mBAKZ,6BAGA,+B,oBCZGoE,GA/BmC,SAAC,GAQ9C,EANGrH,KAMF,IALEhB,EAKH,EALGA,SAAUsI,EAKb,EALaA,cACVzL,EAIH,EAJGA,UAEGwE,EAEN,+DAQKkH,EAAmB,UAAM1I,KAAE2I,MAAR,YAAiB3L,GAAwB,IAElE,OACI,oCACI,yCACImE,KAAM,QACNhB,SAba,SAACO,GACtBP,GAAYA,EAASO,GAErB+H,GAAiBA,GAAe/H,EAAEC,cAAcT,QAWxClD,UAAW0L,GAEPlH,MCsBLoH,I,MAjD+C,SAAC,GAO1D,EALGzH,KAKH,EALShB,SAKR,IAJEsI,EAIH,EAJGA,cAAevI,EAIlB,EAJkBA,MAEZsB,EAEN,2DAcD,OACI,yBAAKxE,UAAU,gBACX,0BAAMA,UAAU,gBAChB,yCACImE,KAAM,QACNhB,SAXQ,SAACO,GACjB+H,GAAiBA,EAAc,EAAE/H,EAAEC,cAAcT,MAAMA,EAAM,MAWrDA,MAAOA,EAAM,GAEd2I,IAAK3I,EAAM,IAINsB,IAGR,yCACIL,KAAM,QACNhB,SApBS,SAACO,GAClB+H,GAAiBA,EAAc,CAACvI,EAAM,IAAIQ,EAAEC,cAAcT,SAoBnD4I,IAAK5I,EAAM,GAGVA,MAAOA,EAAM,IACTsB,OCPLuH,OA1Cf,WAAiB,IAAD,EACgBlM,mBAAS,GADzB,mBACLmM,EADK,KACGC,EADH,OAEgBpM,mBAAS,KAFzB,mBAELqM,EAFK,KAEGC,EAFH,KAOZ,OACI,6BACI,6BADJ,eAKI,6BACI,8BAAOH,GACP,kBAAC,GAAD,CAAY9I,MAAO8I,EACPP,cAAeQ,KAK/B,6BACI,0CACA,8BAAOD,GACP,kBAAC,GAAD,CAEI9I,MAAO,CAAC8I,EAAOE,GACfT,cAxBM,SAACW,GACvBH,EAAUG,EAAO,IACjBD,EAAUC,EAAO,OAyBL,8BAAOF,IAGX,6BAIA,+B,oBClCR9B,GAAiC,CACjCiC,MAAO,QAeIC,GAbM,WAAgE,IAA/DjG,EAA8D,uDAAtD+D,GAAc9B,EAAwC,uCAChF,OAAQA,EAAOnE,MACX,IAAK,eAED,OAAO,6BAAIkC,GAAX,IACIgG,MAAO/D,EAAO+D,QAEtB,QACI,OAAOhG,ICVbkG,GAA2B,CAAC,OAAQ,MAAO,QAsBlCC,OApBf,WACI,IAAMH,EAAQ3B,cAAqC,SAAArE,GAAK,OAAIA,EAAMoG,KAAKJ,SACjEzB,EAAWC,eAGjB,OACI,yBAAK7K,UAAWgD,KAAEqJ,IACd,6BACA,0BAAMrM,UAAWgD,KAAEqJ,EAAQ,UAA3B,gBAMA,kBAAC,EAAD,CAAa3E,QAAS6E,GAAQ5E,eAXb,SAAC0E,GAAsBzB,EDQvB,SAACyB,GAAD,MAAsB,CAAClI,KAAK,eAAekI,SCRXK,CAAcL,KAWCnJ,MAAOmJ,IACvE,+BCMGM,OAlBf,WACI,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,oBCbGC,OAVf,WACI,OACI,yBAAK5M,UAAWC,KAAG4M,WACf,yBAAK7M,UAAWC,KAAG6M,KAAnB,OACA,gDACA,mFCiBGC,OAff,SAAiBnN,GAIb,OACI,6BACI,4BAAQS,QAJQ,WAAOT,EAAMsF,oBAI7B,OACA,kBAAC,EAAD,CACIG,QAASzF,EAAMyF,QACfH,gBAAiBtF,EAAM8F,aACvB,2BAAI9F,EAAMoN,U,SClBpBC,G,QAAWC,EAAMC,OAAO,CAC1BC,QAAQ,mDAKCC,GAAM,WACK,IAAfC,IAAc,yDACf,OAAOL,GAASM,KAAK,GAAG,CAACD,aCC7BlD,GAAiC,CACjCkD,SAAS,EACTrM,QAAQ,IAoBCuM,GAAkB,SAACvM,GAAD,MAA4B,CAACkD,KAAM,iBAAkBlD,YAkBrEwM,GApCQ,WAAiE,IAAhEpH,EAA+D,uDAAvD+D,GAAc9B,EAAyC,uCACnF,OAAQA,EAAOnE,MACX,IAAK,iBAED,OAAO,6BACAkC,GADP,IAEIiH,QAAShF,EAAOgF,UAExB,IAAK,iBACD,OAAO,6BACAjH,GADP,IAEIpF,QAASqH,EAAOrH,UAExB,QACI,OAAOoF,ICAJqH,OAvBf,WACI,IAAMC,EAAW9C,eACXxF,EAAUqF,cAAmC,SAAArE,GAAK,OAAIA,EAAMuH,KAAKN,WACjEN,EAAStC,cAAyC,SAAArE,GAAK,OAAIA,EAAMuH,KAAK3M,WACtEyE,EAAamI,uBAAY,SAACC,GAE5BH,EDoB8C,CAACxJ,KAAM,iBAAkBmJ,QCpB9CQ,MAC1B,CAACH,IAGJ,OAEI,6BACI,6BACA,8CAGA,kBAAC,GAAD,CAAStI,QAASA,EAASK,WAAYA,EAAYR,gBATnC,WDqBG,IAACoI,ECrBGK,GDqBHL,ECrB4BjI,EDsBjD,SAACuF,GAEJyC,GAAWC,GACNS,MAAK,SAAAC,GAEF,IAAI/M,EAAQ,CAAC+M,EAASpM,KAAKqM,UAAUD,EAASpM,KAAKsM,MACnDtD,EAAS4C,GAAgBvM,IACzBkG,QAAQC,IAAI4G,EAASpM,SAExBuM,OAAM,SAACC,GACJxD,EAAS4C,GAAgBY,WCvBwDpB,OAAQA,IAC7F,+BCJGqB,OAbf,WACI,OACI,6BACI,kBAAC,IAAD,KACK,kBAAC,IAAD,CAAOC,KAAMC,GAAK/B,KAAMgC,OAAQ,kBAAM,kBAAC,GAAD,SACtC,kBAAC,IAAD,CAAOF,KAAMC,GAAKb,KAAMc,OAAQ,kBAAM,kBAAC,GAAD,UAE3C,kBAAC,IAAD,CAASjO,GAAG,SAAZ,QAAkC,6BAClC,kBAAC,IAAD,CAASA,GAAIgO,GAAKb,MAAlB,UCGCa,GAAO,CAChBE,WAAY,cACZC,gBAAiB,iBACjBC,cAAc,gBACdvN,IAAK,OACLa,IAAK,OACL6B,IAAK,OACLwB,IAAK,OACL+B,IAAK,OACLc,IAAK,OACLQ,IAAK,OACLwB,IAAK,OACLM,KAAM,QACNsB,KAAM,QACNS,KAAM,QACNkB,KAAM,SAsCKkB,OAlCf,WACI,OACI,6BAEI,kBAAC,IAAD,KAII,kBAAC,IAAD,CAAON,KAAM,IAAKO,OAAK,EAACL,OAAQ,kBAAM,kBAAC,IAAD,CAAUjO,GAAIgO,GAAKE,gBAEzD,kBAAC,IAAD,CAAOH,KAAMC,GAAKnN,IAAKyN,OAAK,EAACL,OAAQ,kBAAM,kBAAC,EAAD,SAC3C,kBAAC,IAAD,CAAOF,KAAMC,GAAKtM,IAAK4M,OAAK,EAACL,OAAQ,kBAAM,kBAAC,EAAD,SAC3C,kBAAC,IAAD,CAAOF,KAAMC,GAAKzK,IAAK+K,OAAK,EAACL,OAAQ,kBAAM,kBAAC,EAAD,SAC3C,kBAAC,IAAD,CAAOF,KAAMC,GAAKjJ,IAAKuJ,OAAK,EAACL,OAAQ,kBAAM,kBAAC,EAAD,SAC3C,kBAAC,IAAD,CAAOF,KAAMC,GAAKlH,IAAKwH,OAAK,EAACL,OAAQ,kBAAM,kBAAC,EAAD,SAC3C,kBAAC,IAAD,CAAOF,KAAMC,GAAKpG,IAAK0G,OAAK,EAACL,OAAQ,kBAAM,kBAAC,GAAD,SAC3C,kBAAC,IAAD,CAAOF,KAAMC,GAAK5F,IAAKkG,OAAK,EAACL,OAAQ,kBAAM,kBAAC,GAAD,SAC3C,kBAAC,IAAD,CAAOF,KAAMC,GAAKpE,IAAK0E,OAAK,EAACL,OAAQ,kBAAM,kBAAC,GAAD,SAC3C,kBAAC,IAAD,CAAOF,KAAMC,GAAK9D,KAAMoE,OAAK,EAACL,OAAQ,kBAAM,kBAAC,GAAD,SAC5C,kBAAC,IAAD,CAAOF,KAAMC,GAAKxC,KAAM8C,OAAK,EAACL,OAAQ,kBAAM,kBAAC,GAAD,SAC5C,kBAAC,IAAD,CAAOF,KAAMC,GAAKE,WAAYD,OAAQ,kBAAM,kBAAC,GAAD,SAC5C,kBAAC,IAAD,CAAOF,KAAM,CAACC,GAAKG,gBAAiBH,GAAK/B,KAAM+B,GAAKb,MAAOc,OAAQ,kBAAM,kBAAC,GAAD,SAjB7E,KAuBI,kBAAC,IAAD,CAAOA,OAAQ,kBAAM,kBAAC,GAAD,YC/CtBM,OAZf,WACI,OACI,6BAEI,kBAAC,IAAD,KACA,kBAAC,EAAD,MACA,kBAAC,GAAD,SCWGC,OAbf,WACI,OACI,yBAAK/O,UAAWgD,IAAE+L,KACd,mDAKA,kBAAC,GAAD,QCLQC,QACW,cAA7B/H,OAAOgI,SAASC,UAEe,UAA7BjI,OAAOgI,SAASC,UAEhBjI,OAAOgI,SAASC,SAASC,MACvB,2D,sBCZFC,GAAUC,aAAgB,CAC1B1E,KAAMH,GACNiC,KAAKH,GACLsB,KAAKH,KAEL6B,GAAMC,aAAYH,GAASI,aAAgBC,OAI/CxI,OAAOqI,MAAQA,GACAA,UCRfI,IAASlB,OACL,kBAAC,IAAMmB,WAAP,KACI,kBAAC,KAAD,CAAUL,MAAOA,IACjB,kBAAC,GAAD,QAGJM,SAASC,eAAe,SF6HtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjC,MAAK,SAAAkC,GACJA,EAAaC,gBAEd/B,OAAM,SAAAtL,GACLsE,QAAQtE,MAAMA,EAAM5B,c","file":"static/js/main.54ca6485.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Message_wrap__3dA-v\",\"messages\":\"Message_messages__1YDvZ\",\"ava\":\"Message_ava__1XESs\",\"itemUser\":\"Message_itemUser__ErM9j\",\"textUser\":\"Message_textUser__3ne9g\",\"name\":\"Message_name__1rid5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagePreloader\":\"hw10_pagePreloader__t1XFi\",\"windows8\":\"hw10_windows8__2Q2Fy\",\"cssloadContainer\":\"hw10_cssloadContainer__36dqe\",\"cssloadL\":\"hw10_cssloadL__24esI\",\"cssloadI\":\"hw10_cssloadI__7jkdG\",\"cssloadN\":\"hw10_cssloadN__27tg1\",\"cssloadG\":\"hw10_cssloadG__1Q1MB\",\"cssloadSquare\":\"hw10_cssloadSquare__1mlSc\",\"cssloadCircle\":\"hw10_cssloadCircle___16yq\",\"cssloadTriangle\":\"hw10_cssloadTriangle__2k8mX\",\"cssloadShrinkgrow\":\"hw10_cssloadShrinkgrow__14KYH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__21KUr\",\"default\":\"SuperInputText_default__3IHUr\",\"errorInput\":\"SuperInputText_errorInput__3jmQz\",\"error\":\"SuperInputText_error__2NeHm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3lWSK\",\"error\":\"Greeting_error__W11jW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3562p\",\"red\":\"SuperButton_red__3nHBM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2ReQZ\",\"spanClassName\":\"SuperCheckbox_spanClassName__1Brb1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dark\":\"HW12_dark__1j0T1\",\"dark-text\":\"HW12_dark-text__fOClT\",\"red\":\"HW12_red__1NrEH\",\"red-text\":\"HW12_red-text__3IKOu\",\"some\":\"HW12_some__2fSuM\",\"some-text\":\"HW12_some-text__1em-8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorPage\":\"Error404_errorPage__2tJEJ\",\"num\":\"Error404_num__ShY9i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__eJvKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__K212D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3spm9\",\"column\":\"HW4_column__1sIjr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__13EuE\"};","import React, {useState} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport cl from \"./Header.module.css\"\nimport { PATH } from \"./Routes\";\n\n\nfunction Header() {\n    return (\n        <div>\n            <Nav title={\"menu\"}/>\n        </div>\n    );\n}\n\nexport default Header;\ntype NavType = {\n    title: string\n}\n\nfunction Nav(props: NavType) {\n    let [collaps, setCollaps] = useState<boolean>(true)\n    return (\n        <div className={cl.nav}>\n            <NavTile titleValue={props.title} onClick={() => {\n                setCollaps(!collaps)\n            }}/>\n            {!collaps && <NavBody/>}\n        </div>\n\n    );\n}\n\ntype NavTileType = {\n    titleValue: string\n    onClick: () => void\n}\n\nfunction NavTile(props: NavTileType) {\n    return (\n        <h2 onClick={props.onClick}>{props.titleValue}</h2>\n    )\n}\n\nfunction NavBody() {\n    return (\n        <ul>\n            <li><NavLink to=\"/hw1\">HW1</NavLink></li>\n            <li><NavLink to=\"/HW2\">HW2</NavLink></li>\n            <li><NavLink to=\"/HW3\">HW3</NavLink></li>\n            <li><NavLink to=\"/HW4\">HW4</NavLink></li>\n            <li><NavLink to=\"/HW6\">HW6</NavLink></li>\n            <li><NavLink to=\"/HW7\">HW7</NavLink></li>\n            <li><NavLink to=\"/HW8\">HW8</NavLink></li>\n            <li><NavLink to=\"/HW9\">HW9</NavLink></li>\n            <li><NavLink to=\"/HW10\">HW10</NavLink></li>\n            <li><NavLink to=\"/HW11\">HW11</NavLink></li>\n            <li><NavLink to=\"/HW12\">HW12</NavLink></li>\n            <li><NavLink to=\"/pre-junior\">PreJunior(Home)</NavLink></li>\n            <li><NavLink to=\"/PreJuniorPlus\">PreJunior+</NavLink></li>\n            {/*<li><NavLink to={PATH.PRE_PREJUNIOR}>Pre-PreJunior</NavLink></li>*/}\n        </ul>\n    )\n}\n","import React from \"react\";\r\nimport cl from './Message.module.css';\r\nimport userEvent from \"@testing-library/user-event\";\r\n\r\ntype messageDataType={\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\nfunction Message(props:messageDataType) {\r\n    return (\r\n        <div className={cl.messages}>\r\n            <div className={cl.itemUser}>\r\n                <img src={props.avatar} className={cl.ava}/>\r\n                <div className={cl.textUser}>\r\n                    <div>\r\n                        <h4 className={cl.nameUser}>{props.name}</h4>\r\n                        <p className={cl.message}>{props.message}</p>\r\n                    </div>\r\n                    <span className={cl.time}>{props.time}</span>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Message from \"./Message\";\r\nimport { type } from \"os\";\r\nimport cl from './Message.module.css';\r\nexport type messageDataType={\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n// type propsType = {\r\n//     messageData: Array<messageDataType>\r\n// }\r\nconst messageData:messageDataType = {\r\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\r\n    name: \"Some Name\",\r\n    message: \"some text\",\r\n    time: \"22:00\",\r\n};\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div className={cl.wrap}>\r\n            <hr/>\r\n            {/* homeworks 1 */}\r\n            <Message avatar={messageData.avatar} name={messageData.name} message={messageData.message} time={messageData.time} />\r\n            \r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React from \"react\";\nimport { AffairType } from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType\n    deleteAffairCallback: (_id:number) => void \n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)};\n\n    return (\n        <div>\n           \n            <span>{props.affair.name}</span>\n            <button onClick={deleteCallback}>X</button>\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\n\ntype AffairsPropsType = { \n    data: Array<AffairType>\n    setFilter: (filter:FilterType) => void\n    deleteAffairCallback: (_id:number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {props.setFilter ('all')}; // need to fix\n    const setHigh = () => {props.setFilter ('high')};\n    const setMiddle = () => {props.setFilter('middle')};\n    const setLow = () => {props.setFilter('low')};\n\n    return (\n        <div>\n\n            {mappedAffairs}\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\nexport type AffairPriorityType = 'high'|'low'|'middle'; \nexport type AffairType = {\n    _id: number\n    name: string\n    priority:FilterType\n}; \nexport type FilterType = \"all\" | AffairPriorityType;\n\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType):  Array<AffairType> => { \n    if (filter === \"all\") return affairs;\n    if(filter === \"low\") return affairs.filter(el => el.priority === 'low');\n    if(filter === 'high') return affairs.filter(el => el.priority ==='high');\n    if(filter === 'middle') return affairs.filter(el => el.priority ==='middle');\n     return affairs; \n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {   \n    return affairs.filter(el=>el._id != _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>([ \n        {_id: 1, name: \"React\", priority: \"high\"},\n        {_id: 2, name: \"anime\", priority: \"low\"},\n        {_id: 3, name: \"games\", priority: \"low\"},\n        {_id: 4, name: \"work\", priority: \"high\"},\n        {_id: 5, name: \"html & css\", priority: \"middle\"},\n    ]); \n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); \n    return (\n        <div>\n            <hr/>\n\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React, { ChangeEvent } from \"react\";\nimport s from \"./Greeting.module.css\";\n\ntype GreetingPropsType = {\n    name: string \n    setNameCallback: (e: ChangeEvent<HTMLInputElement>)=>void  \n    addUser: ()=>void \n    error: string | null \n    totalUsers: number\n}\n\nconst Greeting: React.FC<GreetingPropsType> = (  {name, setNameCallback, addUser, error, totalUsers} ) => {\n    // const inputClass = name? s.someClass : s.error; \n    const inputClass = error? s.error : s.someClass; \n   \n    return (\n        <div>\n            <span>{error}</span>\n            <div>\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\n            <button onClick={addUser}>add</button>\n            </div>\n            <span>count users: {totalUsers}</span>\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {useState, ChangeEvent} from \"react\";\nimport Greeting from \"./Greeting\";\nimport { UserType } from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> \n    addUserCallback: (name: string)=>void\n}\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n// более современный и удобный для про :)\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\"); \n    const [error, setError] = useState<string|null>(null);\n\n    const setNameCallback = (e:ChangeEvent<HTMLInputElement>) => { \n        let errorValue = e.currentTarget.value\n      \n        if(error){setError('')}\n        setName(e.currentTarget.value);\n    };\n    const addUser = () => {\n        if(name.trim()) { \n            alert(`Hello ${name} !`)\n            addUserCallback(name)\n            setName('')\n        } else { \n            setError('i dont see youre name:-( ');\n        }\n    };\n\n    const totalUsers:number = users.length; \n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport { v1 } from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string \n    name: string \n}\n\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]); \n\n    const addUserCallback = (name: string) => { \n        let newName:UserType = {name: name , _id: v1()}\n        setUsers([newName, ...users]); \n    }\n\n    return (\n        <div>\n            <hr/>\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperInputTextPropsType = DefaultInputPropsType & { \n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    setError:(error:string)=>void\n    \n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {   \n        type, onChange, onChangeText, onKeyPress, onEnter, error, className, spanClassName,setError,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setError('');\n        onChange && onChange(e); // если есть пропс onChange// то передать ему е (поскольку onChange не обязателен)\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    // const finalInputClassName = `${s.errorInput} ${className}`; // need to fix with (?:) and s.superInput\n    // const finalInputClassName = `${s.errorInput} ${className ? className : \"\"}`; // need to fix with (?:) and ${s.superInput}\n    const finalInputClassName = !error? s.superInput +' '+ s.default : s.errorInput+' '+s.default;\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    { type, onChange, onChangeChecked, className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const[error,setError]=useState<string>(\"\");\n    const showAlert = () => {\n        text ? setError('') : setError(\"error\")\n        if (error) {\n            alert(\"введите текст...\");\n            \n        } else {\n            alert(text); \n            setText('')\n        }\n    }\n    //как не создавая setError с useState cделать error-false\n    // const error = text ? \"\" : \"error\";\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n    let red = false;\n    if(error){red = true}\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    setError={setError}\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    red = {red} // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\nimport  \"./hw.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    setError:(error:string)=>void\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n\n    const onEnterCallback = () => {\n        // setEditMode(); // выключить editMode при нажатии Enter\n\n        onEnter && onEnter();\n        setEditMode(true);\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        // setEditMode(); // выключить editMode при нажатии за пределами инпута\n        setEditMode(true);\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        // setEditMode(); // включить editMode при двойном клике\n        setEditMode(true);\n        onDoubleClick && onDoubleClick(e);\n    };\n\n    const spanClassName = `${\"span-style\"} ${className}`;\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span >\n                        <span\n                            onDoubleClick={onDoubleClickCallBack}\n                            className={spanClassName}\n\n                            {...restSpanProps}\n                        >\n                            {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                            {children || restProps.value}\n                        </span>\n                        <p>you can change text</p>\n                    </span>\n                )\n            }\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\n//https://www.youtube.com/watch?v=3-bZ7gLVSzo\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// использование:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке \"test\"\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n\n\nwindow.addEventListener('storage', e=>{console.log(e);\n}) ","import React, {useState} from \"react\";\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\n\nfunction HW6() {\n    const [value, setValue] = useState<string>(\"\");\n    const[error,setError]=useState<string|null>(null)\n    const save = () => {\n        saveState<string>(\"editable-span-value\", value);\n    };\n    const restore = () => {\n        const result = restoreState<string>(\"editable-span-value\",value)\n        setValue(result);\n        if(value.trim()){setValue(value)}\n    };\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\n                    setError={setError}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW6;\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {options,\n        onChange, onChangeOption,\n        ...restProps}\n) => {\n    //const mappedOptions: any[] = []; // map options with key\n     const mappedOptions: any[] = options ? options.map((o,index)=> <option key={o.index} >{o}</option>) : [];\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e);\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n    return (\n\n        <select onChange={onChangeCallback} {...restProps}>\n          {mappedOptions}\n        </select>\n    );\n}\n\nexport default SuperSelect;\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps, useState} from \"react\";\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // onChange, onChangeOption\n        debugger\n        onChange && onChange(e);\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n    // let [checkeds, setChecked] = useState(false)\n    // const checkedHandler = (checkeds:boolean) => {\n    //     setChecked(!checkeds)\n    // }\n    // const checking=(value:string)=>{ value? true : false}\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        // map options with key\n        <label key={name + \"-\" + i}>\n            <input\n                type={\"radio\"}\n                // name, checked, value, onChange\n                value={o}\n                name={name}\n                checked={value === o}\n                onChange={onChangeCallback}\n            />\n            {o}\n        </label>\n    )) : [];\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    );\n}\n\nexport default SuperRadio;\n","import React, {useState} from \"react\";\nimport SuperSelect from \"./common/c5-SuperSelect/SuperSelect\";\nimport SuperRadio from \"./common/c6-SuperRadio/SuperRadio\";\n\nconst arr = [\"x\", \"y\", \"z\"];\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[1]);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 7\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={\"radio\"}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW7;\n","import {initialPeople, initialPeopleType} from \"../HW8\";\n\ntype  sortOnNameACType = {\n    type: \"sort\"\n    payload: \"down\" | \"up\"\n}\n\ntype checkACType = ReturnType<typeof checkACT>\ntype actionType = sortOnNameACType | checkACType;\nexport const homeWorkReducer = (state: initialPeopleType[] = initialPeople, action: actionType): any => {\n        switch (action.type) {\n            case \"sort\": {\n                let sortedState: initialPeopleType[] = []\n                if (action.payload === 'up') {\n                    sortedState = [...state].sort((a, b) => {\n                        if (a.name > b.name) {\n                            return 1\n                        }\n                        if (a.name < b.name) {\n                            return -1\n                        }\n                        return 0\n                    })\n                } else {\n                    sortedState = [...state].sort((a, b) => {\n                        if (a.name < b.name) {\n                            return 1\n                        }\n                        if (a.name > b.name) {\n                            return -1\n                        }\n                        return 0\n                    })\n                }\n                return sortedState\n            }\n            case \"check\":\n                return state.filter((i)=>i.age > action.age)\n            default:\n                return state\n        }\n    }\n;\nexport const sortOnNameUpAC = () => ({type: \"sort\", payload: 'up'} as const);\nexport const sortOnNameDownAC = () => ({type: \"sort\", payload: 'down'} as const);\nexport const checkACT = () => ({type: \"check\", age:18} as const);","import React, {useState} from \"react\";\nimport {checkACT, homeWorkReducer, sortOnNameDownAC, sortOnNameUpAC} from \"./bll/homeWorkReducer\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nexport type initialPeopleType={\n    _id:number\n    name:string\n    age:number\n}\nexport const initialPeople:Array<initialPeopleType> = [\n    {_id: 0, name: \"Кот\", age: 3},\n    {_id: 1, name: \"Александр\", age: 66},\n    {_id: 2, name: \"Коля\", age: 16},\n    {_id: 3, name: \"Виктор\", age: 44},\n    {_id: 4, name: \"Дмитрий\", age: 40},\n    {_id: 5, name: \"Ирина\", age: 55},\n]\n\n\nfunction HW8() {\n    const [people, setPeople] = useState(initialPeople);\n\n    const finalPeople = people.map(p => (\n        <div key={p._id}>\n            {p.name}\n            {p.age}\n            {/*some name, age*/}\n        </div>\n    ))\n\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, sortOnNameUpAC()))\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, sortOnNameDownAC()))\n    const sortAge = () => setPeople(homeWorkReducer(initialPeople, checkACT()))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 8\n\n            {/*should work (должно работать)*/}\n\n            {finalPeople}\n            <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>\n            <div><SuperButton onClick={sortDown}>sort down</SuperButton></div>\n            <div><SuperButton onClick={sortAge}>sort age</SuperButton></div>\n\n\n            check 18\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativePeople/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW8;\n","import React, {useState} from \"react\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\nfunction Clock() {\n    const [timerId, setTimerId] = useState<number>(0);\n    const [date, setDate] = useState<Date>();\n    const [show, setShow] = useState<boolean>(false);\n\n    const stop = () => {\n        // stop\n        clearInterval(timerId)\n    }\n    const start = () => {\n        stop();\n        const id: number = window.setInterval(() => {\n            let newDate=new Date()\n            setDate(newDate)\n        }, 1000);\n        setTimerId(id);\n    }\n\n    const onMouseEnter = () => {\n        setShow(true)\n    };\n    const onMouseLeave = () => {\n        setShow(false)\n    };\n\n    const stringTime =date? date.toTimeString() : 'time'; // fix with date\n    const stringDate = date? date.toDateString() : 'date'; // fix with date\n\n    return (\n        <div>\n            <div\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n            >\n                {stringTime}\n            </div>\n\n            {show && (\n                <div>\n                    {stringDate}\n                </div>\n            )}\n\n            <SuperButton onClick={start}>start</SuperButton>\n            <SuperButton onClick={stop}>stop</SuperButton>\n\n        </div>\n    );\n}\n\nexport default Clock;\n","import React from \"react\";\nimport Clock from \"./Clock\";\n\nfunction HW9() {\n    return (\n        <div>\n            <hr/>\n            homeworks 9\n\n            {/*should work (должно работать)*/}\n            <Clock/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeClock/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW9;\n","export type  initialStateType = {\r\n    loading: boolean\r\n}\r\ntype loadProcessType=ReturnType<typeof loadProcessAC>\r\ntype actionType = loadProcessType\r\nlet initialState: initialStateType = {\r\n    loading: false\r\n}\r\nconst loadingReducer = (state = initialState, action: actionType):initialStateType => {\r\n    switch (action.type) {\r\n        case \"LOADING\":\r\n            return {...state,\r\n                loading: action.load\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const loadProcessAC = (load:boolean) => ({type:'LOADING',load}as const)\r\n\r\nexport default loadingReducer;","import React from \"react\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {initialStateType, loadProcessAC} from \"../../Redux/loadingReducer\";\nimport {AppStoreType} from \"../../Redux/store\";\nimport cl from \"./hw10.module.css\"\n\nfunction HW10() {\n    // useSelector, useDispatch\n    let loading = useSelector<AppStoreType, boolean>(state => state.hw10.loading);\n    let dispatch = useDispatch();\n    // const loading = false;\n\n    const setLoading = () => {\n        debugger\n        dispatch(loadProcessAC(true));\n        setTimeout(() => {\n            dispatch(loadProcessAC(false))\n        }, 5000)\n        console.log(\"loading...\");\n        // alert(\"lll\")\n    };\n\n    return (\n        <div>\n            <hr/>\n            homeworks 10\n\n            {/*should work (должно работать)*/}\n            {loading\n                ? (\n                    // <div>крутилка...</div>\n                    // Preloader: Start\n                    <div id={cl.pagePreloader}>\n                        <div className={cl.cssloadContainer}>\n                            <div className={cl.cssloadL}>l</div>\n                            <div className={cl.cssloadCircle}></div>\n                            <div className={cl.cssloadTriangle}></div>\n                            <div className={cl.cssloadSquare}></div>\n                            <div className={cl.cssloadI}>I</div>\n                            <div className={cl.cssloadN}>N</div>\n                            <div className={cl.cssloadG}>G</div>\n                        </div>\n                    </div>\n                    //Preloader: Finish\n                ) : (\n                    <div>\n                        <SuperButton onClick={setLoading}>set loading...</SuperButton>\n                    </div>\n                )\n            }\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<Alternative/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW10;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperRange.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeRange?: (value: number) => void\n};\n\nconst SuperRange: React.FC<SuperRangePropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeRange,\n        className,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e); // сохраняем старую функциональность\n\n        onChangeRange && onChangeRange(+e.currentTarget.value);\n\n    }\n\n    const finalRangeClassName = `${s.range} ${className ? className : \"\"}`;\n\n    return (\n        <>\n            <input\n                type={\"range\"}\n                onChange={onChangeCallback}\n                className={finalRangeClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n        </>\n    );\n}\n\nexport default SuperRange;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport './SuperDubleRange.scss';\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\ntype SuperDoubleRangePropsType = {\n    onChangeRange?: (value: [number, number]) => void\n    value: [number, number]\n    // min, max, step, disable, ...\n} & DefaultInputPropsType\n\nconst SuperDoubleRange: React.FC<SuperDoubleRangePropsType> = (\n    {\n        type, onChange,\n        onChangeRange, value,\n        // min, max, step, disable, ...\n        ...restProps\n    }\n) => {\n    // сделать самому, можно подключать библиотеки\n    // const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    //     onChange && onChange(e); // сохраняем старую функциональность\n    //\n    //    onChangeRange && onChangeRange([]);\n    //\n    // }\n    const onChangeLeftR=(e: ChangeEvent<HTMLInputElement>)=>{\n        onChangeRange && onChangeRange([+e.currentTarget.value,value[1]]);\n    }\n    const onChangeRightR=(e: ChangeEvent<HTMLInputElement>)=>{\n        onChangeRange && onChangeRange([value[0],+e.currentTarget.value]);\n    }\n    return (\n        <div className=\"range-slider\">\n            <span className=\"rangeValues\"></span>\n            <input\n                type={\"range\"}\n                onChange={onChangeLeftR}\n                value={value[0]}\n                // min={value[0]}\n               max={value[1]}\n                //step={}\n                // className={finalRangeClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n\n            <input\n                type={\"range\"}\n                onChange={onChangeRightR}\n               min={value[0]}\n               // max={value[1]}\n                // className={finalRangeClassName}\n                value={value[1]}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n        </div>\n    );\n}\n\nexport default SuperDoubleRange;\n","import React, {useState} from \"react\";\nimport SuperRange from \"./common/c7-SuperRange/SuperRange\";\nimport SuperDoubleRange from \"./common/c8-SuperDoubleRange/SuperDoubleRange\";\n\nfunction HW11() {\n    const [value1, setValue1] = useState(0);\n    const [value2, setValue2] = useState(100);\nconst onChaneRangeHandler=(values:number[])=>{\n    setValue1(values[0])\n    setValue2(values[1])\n}\n    return (\n        <div>\n            <hr/>\n            homeworks 11\n\n            {/*should work (должно работать)*/}\n            <div>\n                <span>{value1}</span>\n                <SuperRange value={value1}\n                            onChangeRange={setValue1}\n                    // сделать так чтоб value1 изменялось\n                />\n            </div>\n\n            <div>\n                <p>DoubleRange</p>\n                <span>{value1}</span>\n                <SuperDoubleRange\n//@ts-ignore\n                    value={[value1,value2]}\n                    onChangeRange={onChaneRangeHandler}\n                    // сделать так чтоб value1 и value2 изменялось\n                />\n                <span>{value2}</span>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperRange/>*/}\n            {/*<AlternativeSuperDoubleRange/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW11;\n","import {themeType} from \"../p2-homeworks/h12/HW12\";\r\n\r\nexport type  initialStateType = {\r\n    theme: themeType\r\n}\r\ntype changeThemeType=ReturnType<typeof changeThemeAC>\r\ntype actionType = changeThemeType\r\nlet initialState: initialStateType = {\r\n    theme: \"some\"\r\n}\r\nconst colorReduser = (state = initialState, action: actionType):initialStateType => {\r\n    switch (action.type) {\r\n        case 'CHANGE-THEME':\r\n            debugger\r\n            return {...state,\r\n                theme: action.theme\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const changeThemeAC = (theme:themeType) => ({type:'CHANGE-THEME',theme}as const)\r\n\r\nexport default colorReduser;","import React from \"react\";\nimport s from \"./HW12.module.css\";\nimport SuperSelect from \"../h7/common/c5-SuperSelect/SuperSelect\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../Redux/store\";\nimport {changeThemeAC} from \"../../Redux/colorReduser\";\n\nexport type themeType = 'dark' | 'red' | 'some'\nconst themes: Array<themeType> = ['dark', 'red', 'some'];\n\nfunction HW12() {\n    const theme = useSelector<AppStoreType, themeType>(state => state.hw12.theme); // useSelector\n    const dispatch = useDispatch();\n    const onChangeCallback = (theme: themeType) => {dispatch(changeThemeAC(theme))};\n\n    return (\n        <div className={s[theme]}>\n            <hr/>\n            <span className={s[theme + '-text']}>\n                homeworks 12\n            </span>\n\n            {/*should work (должно работать)*/}\n            {/*SuperSelect or SuperRadio*/}\n            <SuperSelect options={themes} onChangeOption={onChangeCallback} value={theme}/>\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW12;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\nimport HW6 from \"../../h6/HW6\";\nimport HW7 from \"../../h7/HW7\";\nimport HW8 from \"../../h8/HW8\";\nimport HW9 from \"../../h9/HW9\";\nimport HW10 from \"../../h10/HW10\";\nimport HW11 from \"../../h11/HW11\";\nimport HW12 from \"../../h12/HW12\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n            <HW7/>\n            <HW8/>\n            <HW9/>\n            <HW10/>\n            <HW11/>\n            <HW12/>\n        </div>\n    );\n}\n\nexport default PreJunior;\n","import React from \"react\";\nimport cl from \"./Error404.module.css\"\n\nfunction Error404() {\n    return (\n        <div className={cl.errorPage}>\n            <div className={cl.num}>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\r\nimport SuperCheckbox from \"../h4/common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\ntype propsType = {\r\n    checked: boolean\r\n    setChecked: (succes: boolean) => void\r\n    onChangeChecked: () => void\r\n    answer:any\r\n}\r\n\r\nfunction Request(props: propsType) {\r\n\r\n    const onChangeChecked = () => {props.onChangeChecked()}\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={onChangeChecked}>btn</button>\r\n            <SuperCheckbox\r\n                checked={props.checked}\r\n                onChangeChecked={props.setChecked}/>\r\n                <p>{props.answer}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Request;\r\n","import axios from 'axios';\r\n\r\nconst instanse = axios.create({\r\n    baseURL:'https://neko-cafe-back.herokuapp.com/auth/test',\r\n})\r\n\r\n//https://neko-cafe-back.herokuapp.com/auth/test, body: {success: true},\r\n\r\nexport const hwApi={\r\n    send(success= true){\r\n        return instanse.post(\"\",{success})\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {hwApi} from \"./Api\";\r\n\r\n\r\nexport type  initialStateType = {\r\n    success: boolean\r\n    message:Array<string>\r\n}\r\ntype changeRequestType = ReturnType<typeof changeRequestAC>\r\ntype answerRequestType = ReturnType<typeof answerRequestAC>\r\ntype actionType = changeRequestType|answerRequestType\r\nlet initialState: initialStateType = {\r\n    success: false,\r\n    message:[],\r\n}\r\nconst requestReduser = (state = initialState, action: actionType): initialStateType => {\r\n    switch (action.type) {\r\n        case 'CHANGE-REQUEST':\r\n            // debugger\r\n            return {\r\n                ...state,\r\n                success: action.success\r\n            }\r\n        case 'ANSWER-REQUEST':\r\n            return {\r\n                ...state,\r\n                message: action.message\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const changeRequestAC = (success: boolean) => ({type: 'CHANGE-REQUEST', success} as const)\r\nexport const answerRequestAC = (message: Array<string>)=> ({type: 'ANSWER-REQUEST', message} as const)\r\n\r\nexport const changeRequestTC = (success: boolean) => {\r\n    return (dispatch: Dispatch) => {\r\n        //debugger\r\n        hwApi.send(success)\r\n            .then(response => {\r\n               // debugger\r\n                let message=[response.data.errorText,response.data.info]\r\n                dispatch(answerRequestAC(message))\r\n                console.log(response.data);\r\n            })\r\n            .catch((err) => {\r\n                dispatch(answerRequestAC(err))\r\n            })\r\n    }\r\n}\r\n\r\nexport default requestReduser;","import React, {useCallback, useEffect} from \"react\";\nimport Request from \"./Request\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStoreType} from \"../../Redux/store\";\nimport {changeRequestAC, changeRequestTC} from \"../../Redux/requestReduser\";\n\nfunction HW13() {\n    const dicpatch = useDispatch();\n    const checked = useSelector<AppStoreType, boolean>(state => state.hw13.success);\n    const answer = useSelector<AppStoreType, Array<string>>(state => state.hw13.message);\n    const setChecked = useCallback((succes: boolean) => {\n        debugger\n        dicpatch(changeRequestAC(succes))\n    }, [dicpatch])\n    const onChangeChecked = () => {dicpatch(changeRequestTC(checked))}\n\n    return (\n        // <h1/>\n        <div>\n            <hr/>\n            <span>\n                homeworks 13\n            </span>\n            <Request checked={checked} setChecked={setChecked} onChangeChecked={onChangeChecked} answer={answer}/>\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW13;\n","import React from \"react\";\nimport {Route, Switch,NavLink} from \"react-router-dom\";\nimport HW12 from \"../../h12/HW12\";\nimport {PATH} from \"../Routes\";\nimport HW13 from \"../../h13/HW13\";\n\n\nfunction PreJuniorPlus() {\n    return (\n        <div>\n            <Switch>\n                 <Route path={PATH.HW12} render={() => <HW12/>}/>\n                 <Route path={PATH.HW13} render={() => <HW13/>}/>\n            </Switch>\n            <NavLink to='/HW12'>HW12</NavLink><br/>\n            <NavLink to={PATH.HW13}>HW13</NavLink>\n        </div>\n    );\n}\n\nexport default PreJuniorPlus;\n","import React from \"react\";\nimport {Switch, Redirect, Route} from \"react-router-dom\";\nimport PreJunior from './pages/PreJunior';\nimport Error404 from './pages/Error404';\nimport HW1 from '../../p2-homeworks/h1/HW1';\nimport HW2 from '../../p2-homeworks/h2/HW2';\nimport HW3 from '../../p2-homeworks/h3/HW3';\nimport HW4 from '../../p2-homeworks/h4/HW4';\nimport HW6 from \"../h6/HW6\";\nimport PreJuniorPlus from \"./pages/PreJuniorPlus\";\nimport PrePreJunior from \"./pages/pre-PreJunior\";\nimport HW7 from \"../h7/HW7\";\nimport HW8 from \"../h8/HW8\";\nimport HW9 from \"../h9/HW9\";\nimport HW10 from \"../h10/HW10\";\nimport HW11 from \"../h11/HW11\";\n\n\nexport const PATH = {\n    PRE_JUNIOR: \"/pre-junior\",\n    PRE_JUNIOR_PLUS: \"/PreJuniorPlus\",\n    PRE_PREJUNIOR:\"/PrePreJunior\",\n    HW1: \"/hw1\",\n    HW2: \"/hw2\",\n    HW3: \"/HW3\",\n    HW4: \"/HW4\",\n    HW6: \"/HW6\",\n    HW7: \"/HW7\",\n    HW8: \"/HW8\",\n    HW9: \"/HW9\",\n    HW10: \"/HW10\",\n    HW11: \"/HW11\",\n    HW12: \"/HW12\",\n    HW13: \"/HW13\",\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n                {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.HW1} exact render={() => <HW1/>}/>\n                <Route path={PATH.HW2} exact render={() => <HW2/>}/>\n                <Route path={PATH.HW3} exact render={() => <HW3/>}/>\n                <Route path={PATH.HW4} exact render={() => <HW4/>}/>\n                <Route path={PATH.HW6} exact render={() => <HW6/>}/>\n                <Route path={PATH.HW7} exact render={() => <HW7/>}/>\n                <Route path={PATH.HW8} exact render={() => <HW8/>}/>\n                <Route path={PATH.HW9} exact render={() => <HW9/>}/>\n                <Route path={PATH.HW10} exact render={() => <HW10/>}/>\n                <Route path={PATH.HW11} exact render={() => <HW11/>}/>\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n                <Route path={[PATH.PRE_JUNIOR_PLUS, PATH.HW12, PATH.HW13]} render={() => <PreJuniorPlus/>}/>\n\n                {/*<Route path={PATH.PRE_PREJUNIOR} render={() => <PrePreJunior/>}/>*/}\n                //\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\nimport { HashRouter } from \"react-router-dom\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n            <Header/>\n            <Routes/>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from '../../../p2-homeworks/h1/HW1';\r\nimport HW2 from '../../../p2-homeworks/h2/HW2';\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\nimport HW4 from '../../../p2-homeworks/h4/HW4';\r\nimport HW5 from '../../../p2-homeworks/h5/HW5';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:hw</div>\r\n            {/* <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/> */}\r\n            <HW5/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n//npm install --save @types/react-router-dom\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport loadingReducer from \"./loadingReducer\";\r\nimport colorReduser from \"./colorReduser\";\r\nimport requestReduser from \"./requestReduser\";\r\nimport thunk from 'redux-thunk';\r\n\r\nlet reducer = combineReducers({\r\n    hw10: loadingReducer,\r\n    hw12:colorReduser,\r\n    hw13:requestReduser,\r\n})\r\nlet store=createStore(reducer ,applyMiddleware(thunk));\r\n\r\nexport type AppStoreType = ReturnType<typeof reducer>\r\n// @ts-ignore\r\nwindow.store = store;\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./Redux/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n        <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}